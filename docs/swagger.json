{
    "openapi": "3.1.0",
    "info": {
      "version": "1.0.0",
      "title": "Contacts app",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "description": "This is a documentation of contacts app"
    },
    "servers": [
      {
        "url": "http://localhost:3000"
      },
      {
        "url": "https://contacts-app-2kn7.onrender.com/"
      }
    ],
    "tags": [
      {
        "name": "Contacts",
        "description": "Operations with contacts"
      }
    ],
    "paths": {
      "/contacts": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get list of contacts",
          "operationId": "getContacts",
          "description": "Get list of contacts",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer"
              },
              "example": 1
            },
            {
              "in": "query",
              "name": "perPage",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "in": "query",
              "name": "sortBy",
              "schema": {
                "enum": [
                  "_id",
                  "name",
                  "phoneNumber",
                  "email",
                  "isFavourite",
                  "contactType"
                ],
                "example": "name"
              }
            },
            {
              "in": "query",
              "name": "sortOrder",
              "schema": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "example": "asc"
              }
            },
            {
              "in": "query",
              "name": "isFavourite",
              "schema": {
                "type": "boolean",
                "example": true
              }
            },
            {
              "in": "query",
              "name": "contactType",
              "schema": {
                "type": "string",
                "enum": [
                  "work",
                  "home",
                  "personal"
                ],
                "example": "work"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully found contacts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contacts"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "data",
                          "page",
                          "perPage",
                          "totalItems",
                          "totalPages",
                          "hasNextPage",
                          "hasPreviousPage"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/contact"
                            }
                          },
                          "page": {
                            "type": "number",
                            "example": 1
                          },
                          "perPage": {
                            "type": "number",
                            "example": 3
                          },
                          "totalItems": {
                            "type": "number",
                            "example": 2
                          },
                          "totalPages": {
                            "type": "number",
                            "example": 2
                          },
                          "hasNextPage": {
                            "type": "boolean",
                            "example": false
                          },
                          "hasPreviousPage": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            }
          }
        },
        "post": {
          "tags": [
            "Contacts"
          ],
          "summary": "Create contact",
          "operationId": "createContacts",
          "description": "Create a contact",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "phoneNumber",
                    "contactType"
                  ],
                  "properties": {
                    "name": {
                      "description": "Contacts name",
                      "type": "string",
                      "example": "Will"
                    },
                    "phoneNumber": {
                      "description": "Contacts phone number",
                      "type": "string",
                      "example": 380672222222
                    },
                    "email": {
                      "description": "Contacts email",
                      "type": "string",
                      "example": "example@gmail.com"
                    },
                    "isFavourite": {
                      "description": "Contact favourite status",
                      "type": "boolean",
                      "example": false
                    },
                    "contactType": {
                      "description": "Type of contact",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ]
                    },
                    "photo": {
                      "description": "Contacts photo",
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Creates a contact",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully created a contact"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            }
          }
        }
      },
      "/contacts/{contactId}": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get contact by id",
          "operationId": "getContact",
          "description": "Get contact by id",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Get contact by contactId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            }
          }
        },
        "patch": {
          "tags": [
            "Contacts"
          ],
          "summary": "Update contact",
          "operationId": "updateContacts",
          "description": "Update a contact",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Contacts name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "phoneNumber": {
                      "description": "Contacts phone number",
                      "type": "string",
                      "example": "1234567890"
                    },
                    "email": {
                      "description": "Contacts email",
                      "type": "string",
                      "example": "example@gmail.com"
                    },
                    "isFavourite": {
                      "description": "Contacts favourite status",
                      "type": "boolean",
                      "example": false
                    },
                    "contactType": {
                      "description": "Type of contact",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ]
                    },
                    "photo": {
                      "description": "Conatcs photo",
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updates a contact",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully updated a contact!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            }
          }
        },
        "delete": {
          "tags": [
            "Contacts"
          ],
          "summary": "Delete contact by id",
          "operationId": "deleteContact",
          "description": "Delete contact",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Delete contact by contactId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 204
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully deleted contact with id 65ca67e7ae7f10c88b598384"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Register user",
          "operationId": "registerUser",
          "description": "Register User",
          "security": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "email",
                    "password"
                  ],
                  "properties": {
                    "name": {
                      "description": "User name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "description": "User email",
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "password": {
                      "description": "User password",
                      "type": "string",
                      "example": "12345pasS"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Creates a user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 201
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully registered a user!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/user"
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Login user",
          "operationId": "loginUser",
          "description": "Login User",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "description": "User email",
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "password": {
                      "description": "User password",
                      "type": "string",
                      "example": "12345pasS"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Logged in an user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully logged in an user!"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "accessToken": {
                            "description": "Access token",
                            "type": "string",
                            "example": "TDn5k6dfU2zkjG4W6WW0NQJ2Vgl8QkGORZcGIK"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401-2"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/refresh": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Refresh user token",
          "operationId": "refreshUser",
          "description": "Refresh User session",
          "security": [
            {
              "bearerAuth": []
            },
            {
              "cookieAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Refresh user token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully refreshed a session"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "accessToken": {
                            "description": "Access token",
                            "type": "string",
                            "example": "TDn5k6dfU2zkjG4W6WW0NQJ2Vgl8QkGORZcGIK"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401-2"
            },
            "404": {
              "$ref": "#/components/responses/404-2"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Logout user",
          "operationId": "logoutUser",
          "description": "Logout User session",
          "security": [
            {
              "bearerAuth": []
            },
            {
              "cookieAuth": []
            }
          ],
          "responses": {
            "204": {
              "description": "Successful Logout. Response does not contain a body."
            },
            "401": {
              "$ref": "#/components/responses/401-2"
            },
            "404": {
              "$ref": "#/components/responses/404-2"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/send-reset-email": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Request email change password",
          "operationId": "requestReset",
          "description": "Request email change password",
          "security": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "User email",
                      "type": "string",
                      "example": "john.doe@example.com"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Request reset password",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Reset password email has been successfully sent."
                      },
                      "data": {
                        "type": "object",
                        "description": "empty object"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404-2"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/reset-pwd": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Reset password",
          "operationId": "requestPassword",
          "description": "Reset password",
          "security": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token",
                    "password"
                  ],
                  "properties": {
                    "token": {
                      "description": "JWT token received via email for password reset.",
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwiZXhwIjoxNjcxMjM4ODAwfQ.wyDIz8nMKvXOpGfRmlCVJrU11A1IwFT4-NMIszq8R4o"
                    },
                    "password": {
                      "description": "The new password for the user.",
                      "type": "string",
                      "example": "NewSecureP@ssw0rd"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Request reset password",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Password has been successfully reset"
                      },
                      "data": {
                        "type": "object",
                        "description": "empty object"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401-2"
            },
            "404": {
              "$ref": "#/components/responses/404-2"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "contact": {
          "type": "object",
          "required": [
            "_id",
            "name",
            "phoneNumber",
            "contactType",
            "userId"
          ],
          "properties": {
            "_id": {
              "description": "contacts id",
              "type": "string",
              "example": "675c8399c0dd8a4ccbe173fd"
            },
            "name": {
              "description": "contacts name",
              "type": "string",
              "example": "John Doe"
            },
            "phoneNumber": {
              "description": "contacts phoneNumber",
              "type": "number",
              "example": 380672222222
            },
            "isFavourite": {
              "description": "contacts favourite status",
              "type": "boolean",
              "example": true
            },
            "email": {
              "description": "Contact email address",
              "type": "string",
              "example": "john.doe@example.com"
            },
            "contactType": {
              "description": "contacts type",
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ]
            },
            "photo": {
              "description": "Link to contacts photo",
              "type": "string",
              "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
            },
            "userId": {
              "description": "ID of the user who owns this contact",
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        },
        "user": {
          "type": "object",
          "required": [
            "_id",
            "name",
            "email",
            "password"
          ],
          "properties": {
            "_id": {
              "description": "User id",
              "type": "string",
              "example": "675c8399c0dd8a4ccbe173fd"
            },
            "name": {
              "description": "user full name",
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "description": "User email",
              "type": "string",
              "example": "john.doe@example.com"
            },
            "password": {
              "description": "Hashed user password stored in the database",
              "type": "string",
              "example": "$2b$10$ehfmT7JR9ypYhpGViQeeY.IeBX46h7r8IC5S0Xl2Q6UQ2Thn49gDS"
            },
            "role": {
              "description": "User role",
              "type": "string",
              "enum": [
                "user"
              ]
            },
            "createdAt": {
              "description": "Contacts createdAt",
              "type": "string",
              "example": "2024-05-08T16:12:14.954182"
            },
            "updateAt": {
              "description": "Contacts updatedAt",
              "type": "string",
              "example": "2024-11-30T17:19:41.576+00:00"
            }
          }
        }
      },
      "responses": {
        "401": {
          "description": "Unauthorized Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 401
                  },
                  "message": {
                    "type": "string",
                    "example": "Unauthorized Error"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Access token not provided"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not found error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 404
                  },
                  "message": {
                    "type": "string",
                    "example": "NotFoundError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Contact not found"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 409
                  },
                  "message": {
                    "type": "string",
                    "example": "ConflictError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Email in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 500
                  },
                  "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal Server Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401-2": {
          "description": "Unauthorized error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 401
                  },
                  "message": {
                    "type": "string",
                    "example": "UnauthorizedError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Session not found."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404-2": {
          "description": "NotFound error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 404
                  },
                  "message": {
                    "type": "string",
                    "example": "NotFoundError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
